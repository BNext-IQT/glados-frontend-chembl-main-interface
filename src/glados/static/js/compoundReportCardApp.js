// Generated by CoffeeScript 1.4.0
var CompoundReportCardApp;

CompoundReportCardApp = (function() {

  function CompoundReportCardApp() {}

  CompoundReportCardApp.init = function() {
    var compound, mechanismOfActionList, moleculeFormsList;
    GlobalVariables.CHEMBL_ID = URLProcessor.getRequestedChemblID();
    compound = new Compound({
      molecule_chembl_id: GlobalVariables.CHEMBL_ID
    });
    mechanismOfActionList = new MechanismOfActionList();
    mechanismOfActionList.url = Settings.WS_BASE_URL + 'mechanism.json?molecule_chembl_id=' + GlobalVariables.CHEMBL_ID;
    moleculeFormsList = CompoundReportCardApp.initMoleculeFormsList(compound);
    new CompoundNameClassificationView({
      model: compound,
      el: $('#CNCCard')
    });
    new CompoundImageView({
      model: compound,
      el: '#CNCImageCard'
    });
    new CompoundRepresentationsView({
      model: compound,
      el: $('#CompRepsCard')
    });
    new CompoundCalculatedParentPropertiesView({
      model: compound,
      el: $('#CalculatedParentPropertiesCard')
    });
    new CompoundMechanismsOfActionView({
      collection: mechanismOfActionList,
      el: $('#MechOfActCard')
    });
    new CompoundFeaturesView({
      model: compound,
      el: $('#MoleculeFeaturesCard')
    });
    new CompoundMoleculeFormsListView({
      collection: moleculeFormsList,
      el: $('#AlternateFormsCard')
    });
    compound.fetch();
    mechanismOfActionList.fetch({
      reset: true
    });
    moleculeFormsList.fetch({
      reset: true
    });
    $('.scrollspy').scrollSpy();
    ScrollSpyHelper.initializeScrollSpyPinner();
    ButtonsHelper.initCroppedContainers();
    ButtonsHelper.initExpendableMenus();
    this.initPieView();
    return $('select').material_select();
  };

  CompoundReportCardApp.initNameAndClassification = function() {
    var compound;
    GlobalVariables.CHEMBL_ID = URLProcessor.getRequestedChemblIDWhenEmbedded();
    compound = new Compound({
      molecule_chembl_id: GlobalVariables.CHEMBL_ID
    });
    console.log(compound);
    new CompoundNameClassificationView({
      model: compound,
      el: $('#CNCCard')
    });
    new CompoundImageView({
      model: compound,
      el: '#CNCImageCard'
    });
    compound.fetch();
    ButtonsHelper.initCroppedContainers();
    return ButtonsHelper.initExpendableMenus();
  };

  CompoundReportCardApp.initRepresentations = function() {
    var compRepsView, compound;
    GlobalVariables.CHEMBL_ID = URLProcessor.getRequestedChemblIDWhenEmbedded();
    compound = new Compound({
      molecule_chembl_id: CHEMBL_ID
    });
    compRepsView = new CompoundRepresentationsView({
      model: compound,
      el: $('#CompRepsCard')
    });
    compound.fetch();
    ButtonsHelper.initCroppedContainers();
    return ButtonsHelper.initExpendableMenus();
  };

  CompoundReportCardApp.initCalculatedCompoundParentProperties = function() {
    var compound;
    GlobalVariables.CHEMBL_ID = URLProcessor.getRequestedChemblIDWhenEmbedded();
    compound = new Compound({
      molecule_chembl_id: CHEMBL_ID
    });
    new CompoundCalculatedParentPropertiesView({
      model: compound,
      el: $('#CalculatedParentPropertiesCard')
    });
    return compound.fetch();
  };

  CompoundReportCardApp.initMechanismOfAction = function() {
    var mechanismOfActionList;
    GlobalVariables.CHEMBL_ID = URLProcessor.getRequestedChemblIDWhenEmbedded();
    mechanismOfActionList = new MechanismOfActionList();
    mechanismOfActionList.url = Settings.WS_BASE_URL + 'mechanism.json?molecule_chembl_id=' + GlobalVariables.CHEMBL_ID;
    new CompoundMechanismsOfActionView({
      collection: mechanismOfActionList,
      el: $('#MechOfActCard')
    });
    return mechanismOfActionList.fetch({
      reset: true
    });
  };

  CompoundReportCardApp.initMoleculeFeatures = function() {
    var compound;
    GlobalVariables.CHEMBL_ID = URLProcessor.getRequestedChemblIDWhenEmbedded();
    compound = new Compound({
      molecule_chembl_id: CHEMBL_ID
    });
    new CompoundFeaturesView({
      model: compound,
      el: $('#MoleculeFeaturesCard')
    });
    return compound.fetch();
  };

  CompoundReportCardApp.initAlternateForms = function() {
    var compound, moleculeFormsList;
    GlobalVariables.CHEMBL_ID = URLProcessor.getRequestedChemblIDWhenEmbedded();
    compound = new Compound({
      molecule_chembl_id: CHEMBL_ID
    });
    moleculeFormsList = CompoundReportCardApp.initMoleculeFormsList(compound);
    new CompoundMoleculeFormsListView({
      collection: moleculeFormsList,
      el: $('#AlternateFormsCard')
    });
    return moleculeFormsList.fetch({
      reset: true
    });
  };

  /* *
    * Initializes a molecule forms list given a member compound (not necessarily the parent!)
    * For now, it lazy-loads each of the compounds
    * @param {Compound} member_compound, the list of compounds
    * @return {CompoundList} the list that has been created
  */


  CompoundReportCardApp.initMoleculeFormsList = function(member_compound) {
    var compoundList;
    compoundList = new CompoundList;
    compoundList.original_compound = member_compound;
    compoundList.origin = 'molecule_forms';
    compoundList.url = Settings.WS_BASE_URL + 'molecule_form/' + member_compound.get('molecule_chembl_id') + '.json';
    return compoundList;
  };

  CompoundReportCardApp.initPieView = function() {
    var pieview;
    pieview = new PieView;
    return pieview.render();
  };

  return CompoundReportCardApp;

})();

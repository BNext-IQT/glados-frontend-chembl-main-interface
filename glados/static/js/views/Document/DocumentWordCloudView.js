// Generated by CoffeeScript 1.4.0
var DocumentWordCloudView;

DocumentWordCloudView = CardView.extend(ResponsiviseViewExt).extend({
  initialize: function() {
    var updateViewProxy;
    return updateViewProxy = this.setUpResponsiveRender();
  },
  render: function() {
    var K, desiredMaxWidth, elemID, elemWidth, getFontSizeFor, highestValue, highestValueWords, highestWordLength, maxFontSize, value, word, wordList, wordSize, wordVal, _i, _j, _len, _len1;
    elemID = $(this.el).attr('id');
    elemWidth = $(this.el).width();
    $(this.el).height(elemWidth);
    K = 0.54;
    wordList = [['Number', 24], ['7-benzoylbenzofuran-5-ylacetic', 24], ['Acid', 48], ['Synthesize', 24], ['Potent', 24], ['Phenylbutazone', 24], ['Rat', 48], ['Paw', 48], ['Antiinflammatory', 24], ['Edema', 24], ['Assay', 48], ['analgetic', 24], ['compound', 12], ['7-[4-(methylthio)-benzoyl]benzofuran-5-ylacetic', 24], ['Aspirin', 24], ['Mouse', 96], ['Virtually', 12], ['Gastric', 96], ['Ulceration', 96]];
    highestValueWords = [];
    highestValue = 0;
    highestWordLength = 0;
    for (_i = 0, _len = wordList.length; _i < _len; _i++) {
      wordVal = wordList[_i];
      word = wordVal[0];
      wordSize = word.length;
      value = wordVal[1];
      if (value > highestValue) {
        highestValue = value;
        highestValueWords = [];
        highestValueWords.push(word);
        highestWordLength = wordSize;
      } else if (value === highestValue) {
        highestValueWords.push(word);
        if (wordSize > highestWordLength) {
          highestWordLength = wordSize;
        }
      }
    }
    desiredMaxWidth = 0.5 * elemWidth;
    maxFontSize = parseInt(desiredMaxWidth / (K * highestWordLength));
    getFontSizeFor = d3.scale.linear().domain([0, highestValue]).range([10, maxFontSize]).clamp(true);
    for (_j = 0, _len1 = wordList.length; _j < _len1; _j++) {
      wordVal = wordList[_j];
      wordVal[1] = getFontSizeFor(wordVal[1]);
    }
    console.log(wordList);
    return WordCloud(document.getElementById(elemID), {
      list: wordList,
      fontFamily: "Roboto Mono",
      drawOutOfBound: true
    });
  }
});

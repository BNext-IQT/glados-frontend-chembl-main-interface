// Generated by CoffeeScript 1.4.0
var CompoundTargetMatrixView;

CompoundTargetMatrixView = Backbone.View.extend(ResponsiviseViewExt).extend({
  initialize: function() {
    var updateViewProxy;
    this.$vis_elem = $('#BCK-CompTargMatrixContainer');
    return updateViewProxy = this.setUpResponsiveRender();
  },
  render: function() {
    console.log('render!');
    this.paintMatrix();
    return this.hidePreloader();
  },
  paintMatrix: function() {
    var columns, compsTargets, elemWidth, getXCoord, height, margin, matrix, rows, svg, width;
    console.log('painting matrix');
    compsTargets = {
      "rows": [
        {
          "name": "C1"
        }, {
          "name": "C2"
        }, {
          "name": "C3"
        }
      ],
      "columns": [
        {
          "name": "T1"
        }, {
          "name": "T2"
        }, {
          "name": "T3"
        }, {
          "name": "T4"
        }
      ],
      "links": {
        0: {
          0: 1,
          1: 0,
          2: 1
        },
        1: {
          0: 0,
          1: 1,
          2: 0
        },
        2: {
          0: 1,
          1: 0,
          2: 0
        },
        4: {
          0: 0,
          1: 0,
          2: 0
        }
      }
    };
    margin = {
      top: 70,
      right: 0,
      bottom: 10,
      left: 90
    };
    elemWidth = $(this.el).width();
    height = width = 0.8 * elemWidth;
    getXCoord = d3.scale.ordinal().rangeBands([0, width]);
    svg = d3.select('#' + this.$vis_elem.attr('id')).append('svg').attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom).append("g").attr("transform", "translate(" + margin.left + "," + margin.top + ")");
    svg.append("rect").attr("class", "background").style("fill", "white").attr("width", width).attr("height", height);
    matrix = [];
    rows = compsTargets.rows;
    columns = compsTargets.columns;
    columns.forEach(function(node, i) {
      node.index = i;
      return matrix[i] = d3.range(rows.length).map(function(j) {
        return {
          col: j,
          row: i,
          z: compsTargets.links[i][j]
        };
      });
    });
    console.log('Matrix:');
    return console.log(matrix);
  }
});

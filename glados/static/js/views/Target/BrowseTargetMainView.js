// Generated by CoffeeScript 1.4.0
var BrowseTargetMainView;

BrowseTargetMainView = Backbone.View.extend({
  events: {
    'click .open-all': 'openAll',
    'click .collapse-all': 'collapseAll',
    'click .select-all': 'selectAll',
    'click .clear-selections': 'clearSelections',
    'change input[name="selectTree"]': 'selectTree'
  },
  initialize: function() {
    this.listView = TargetBrowserApp.initBrowserAsList(this.model, $('#BCK-TargetBrowserAsList'));
    return this.circlesView = TargetBrowserApp.initBrowserAsCircles(this.model, $('#BCK-TargetBrowserAsCircles'));
  },
  openAll: function() {
    return this.listView.expandAll();
  },
  collapseAll: function() {
    return this.listView.collapseAll();
  },
  selectAll: function() {
    return this.listView.selectAll();
  },
  clearSelections: function() {
    return this.listView.clearSelections();
  },
  selectTree: function() {
    var btnCheckedID, url;
    btnCheckedID = $(this.el).find('input[name="selectTree"]:checked').attr('id');
    url = (function() {
      switch (btnCheckedID) {
        case 'radio-proteinTargetTree':
          return this.model.url = 'static/data/protein_target_tree.json';
        case 'radio-taxonomyTree':
          return this.model.url = 'static/data/taxonomy_target_tree.json';
        case 'radio-geneOntologyTree':
          return this.model.url = 'static/data/gene_ontology_tree.json';
      }
    }).call(this);
    this.listView.showPreloader();
    this.circlesView.showPreloader();
    return this.model.fetch();
  }
});

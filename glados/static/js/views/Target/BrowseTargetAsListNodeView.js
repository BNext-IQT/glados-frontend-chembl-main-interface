// Generated by CoffeeScript 1.4.0
var BrowseTargetAsListNodeView;

BrowseTargetAsListNodeView = Backbone.View.extend({
  initialize: function() {
    return this.model.on('change', this.changed, this);
  },
  events: {
    'click [type="checkbox"]': 'clickInput',
    'click .tree-expander': 'toggleCollapsed'
  },
  clickInput: function() {
    if (this.model.get('selected') === true) {
      return this.model.unCheckMeAndMyDescendants();
    } else {
      return this.model.checkMeAndMyDescendants();
    }
  },
  changed: function() {
    if (this.model.get('selected')) {
      $(this.el).find('[type="checkbox"]').prop('checked', true);
    } else {
      $(this.el).find('[type="checkbox"]').prop('checked', false);
    }
    if (this.model.get('incomplete')) {
      $(this.el).find('[type="checkbox"]').addClass('incomplete');
      $(this.el).find('[type="checkbox"]').prop('checked', true);
    } else {
      $(this.el).find('[type="checkbox"]').removeClass('incomplete');
    }
    if (!this.model.get('is_leaf')) {
      if (this.model.get('collapsed')) {
        $(this.el).find('.tree-expander').removeClass('tree-expander-expanded');
        $(this.el).find('.tree-expander').addClass('tree-expander-collapsed');
      } else {
        $(this.el).find('.tree-expander').addClass('tree-expander-expanded');
        $(this.el).find('.tree-expander').removeClass('tree-expander-collapsed');
      }
    }
    if (this.model.get('found')) {
      $(this.el).addClass('green accent-1');
    } else {
      $(this.el).removeClass('green accent-1');
    }
    if (this.model.get('show')) {
      return $(this.el).show();
    } else {
      return $(this.el).hide();
    }
  },
  toggleCollapsed: function() {
    return this.model.toggleCollapsed();
  }
});

// Generated by CoffeeScript 1.4.0
var WizardStepView;

WizardStepView = Backbone.View.extend({
  initialize: function() {
    this.model.on('change', this.render, this);
    this.model.on('error', this.showErrorMsg, this);
    return this.setPreloader();
  },
  events: {
    "click .db-menu-link": "goToStep",
    "mouseover .db-menu-option": "handleHover"
  },
  render: function() {
    var bckOption, newElement, option, wizardOprionView, _i, _len, _ref, _results;
    this.hidePreloader();
    $(this.el).html(Handlebars.compile($('#Handlebars-DownloadWizard-step').html())({
      title: this.model.get('title'),
      description: this.model.get('description'),
      previous_step: this.model.get('previous_step'),
      hide_previous_step: !(this.model.get('previous_step') != null),
      right_option: this.model.get('right_option'),
      hide_right_option: !(this.model.get('right_option') != null),
      left_option: this.model.get('left_option'),
      hide_left_option: !(this.model.get('left_option') != null)
    }));
    _ref = this.model.get('options');
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      option = _ref[_i];
      bckOption = new WizardOption({
        title: option.title,
        description: option.description,
        link: option.link,
        icon: option.icon,
        type: option.type
      });
      newElement = $('<div>');
      wizardOprionView = new WizardOptionView({
        model: bckOption,
        el: newElement,
        parentView: 'hola'
      });
      _results.push($(this.el).find('.db-menu-option-container').append(newElement));
    }
    return _results;
  },
  goToStep: function(event) {
    var next_url;
    this.setPreloader();
    next_url = '/download_wizard/' + $(event.currentTarget).attr('href').substring(1);
    this.model.url = next_url;
    return this.model.fetch();
  },
  handleHover: function(event) {
    var desc;
    desc = $(event.currentTarget).attr('data-description');
    return $(this.el).find('.db-menu-option-description').text(desc);
  },
  showDescription: function() {
    return console.log('showing desc');
  },
  hidePreloader: function() {
    return $(this.el).find('.card-preolader-to-hide').hide();
  },
  setPreloader: function() {
    return $(this.el).html(Handlebars.compile($('#Handlebars-Common-Preloader').html()));
  },
  showErrorMsg: function() {
    return $(this.el).html(Handlebars.compile($('#Handlebars-DownloadWizard-error').html())({
      msg: 'There was an error loading the next step'
    }));
  }
});

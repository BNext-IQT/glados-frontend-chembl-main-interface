// Generated by CoffeeScript 1.4.0
var DownloadModelExt;

DownloadModelExt = {
  getBlobToDownload: function(contentStr) {
    return new Blob([contentStr], {
      type: 'text/plain;charset=utf-8'
    });
  },
  getDownloadObject: function(downloadParserFunction) {
    if (!(downloadParserFunction != null)) {
      return this.attributes;
    } else {
      return downloadParserFunction(this.attributes);
    }
  },
  getCSVHeaderString: function(downloadObject) {
    var key, keys, value;
    keys = [];
    for (key in downloadObject) {
      value = downloadObject[key];
      keys.push(key);
    }
    return keys.join(';');
  },
  getCSVContentString: function(downloadObject) {
    var key, value, values;
    values = [];
    for (key in downloadObject) {
      value = downloadObject[key];
      values.push(JSON.stringify(downloadObject[key]));
    }
    return values.join(';');
  },
  getFullCSVString: function(downloadObject) {
    var content, header;
    header = this.getCSVHeaderString(downloadObject);
    content = this.getCSVContentString(downloadObject);
    return header + '\n' + content;
  },
  downloadCSV: function(filename, downloadParserFunction) {
    var blob, downloadObject;
    downloadObject = this.getDownloadObject(downloadParserFunction);
    blob = this.getBlobToDownload(this.getFullCSVString(downloadObject));
    return saveAs(blob, filename);
  },
  getJSONString: function(downloadObject) {
    return JSON.stringify(downloadObject);
  },
  downloadJSON: function(filename, downloadParserFunction) {
    var blob, downloadObject;
    downloadObject = this.getDownloadObject(downloadParserFunction);
    blob = this.getBlobToDownload(this.getJSONString(downloadObject));
    return saveAs(blob, filename);
  },
  getXLSString: function(downloadObject) {
    return 'XLSX';
  },
  downloadXLS: function(filename, downloadParserFunction) {
    var blob, downloadObject;
    downloadObject = this.getDownloadObject(downloadParserFunction);
    blob = this.getBlobToDownload(this.getXLSString(downloadObject));
    return saveAs(blob, filename);
  }
};
